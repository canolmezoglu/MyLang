import Sprockell
prog :: [Instruction]
prog = [Load  (ImmValue 1) regE,WriteInstr  regE (IndAddr regSprID),Load  (ImmValue 1) regC,Compute  Sub regC regSprID regC,Branch  regC (Rel (2)),Jump  (Rel (35)),Load  (ImmValue 2) regA,Compute  Sub regA regSprID regA,Branch  regA (Rel (2)),Jump  (Rel (59)),Load  (ImmValue 0) regA,WriteInstr  regA (DirAddr 3),Load  (ImmValue 0) regB,WriteInstr  regB (DirAddr 4),Load  (ImmValue 0) regC,WriteInstr  regC (DirAddr 5),Load  (ImmValue 0) regD,WriteInstr  regD (DirAddr 6),WriteInstr  reg0 (DirAddr 1),TestAndSet  (DirAddr 0),Receive  regE,Compute  Equal regE reg0 regE,Branch  regE (Rel (-3)),WriteInstr  reg0 (DirAddr 2),TestAndSet  (DirAddr 0),Receive  regA,Compute  Equal regA reg0 regA,Branch  regA (Rel (-3)),TestAndSet  (DirAddr 1),Receive  regB,Compute  Equal regB reg0 regB,Branch  regB (Rel (-3)),TestAndSet  (DirAddr 2),Receive  regC,Compute  Equal regC reg0 regC,Branch  regC (Rel (-3)),ReadInstr  (DirAddr 6),Receive  regA,WriteInstr  regA numberIO,EndProg,TestAndSet  (DirAddr 1),Receive  regD,Compute  Equal regD reg0 regD,Branch  regD (Rel (-3)),WriteInstr  reg0 (DirAddr 0),Load  (ImmValue 1) regE,WriteInstr  regE (DirAddr 4),Load  (ImmValue 1) regA,WriteInstr  regA (DirAddr 3),ReadInstr  (DirAddr 5),Receive  regB,ReadInstr  (DirAddr 3),Receive  regD,Load  (ImmValue 1) regA,Compute  Equal regD regA regD,Compute  And regB regD regB,Branch  regB (Rel (2)),Jump  (Rel (2)),Jump  (Rel (-9)),ReadInstr  (DirAddr 6),Receive  regC,Load  (ImmValue 1) regA,Compute  Add regC regA regC,WriteInstr  regC (DirAddr 6),Load  (ImmValue 0) regD,WriteInstr  regD (DirAddr 4),WriteInstr  reg0 (DirAddr 1),EndProg,TestAndSet  (DirAddr 2),Receive  regE,Compute  Equal regE reg0 regE,Branch  regE (Rel (-3)),WriteInstr  reg0 (DirAddr 0),Load  (ImmValue 1) regA,WriteInstr  regA (DirAddr 5),Load  (ImmValue 0) regC,WriteInstr  regC (DirAddr 3),ReadInstr  (DirAddr 4),Receive  regD,ReadInstr  (DirAddr 3),Receive  regA,Load  (ImmValue 0) regE,Compute  Equal regA regE regA,Compute  And regD regA regD,Branch  regD (Rel (2)),Jump  (Rel (2)),Jump  (Rel (-9)),ReadInstr  (DirAddr 6),Receive  regC,Load  (ImmValue 2) regA,Compute  Add regC regA regC,WriteInstr  regC (DirAddr 6),Load  (ImmValue 0) regE,WriteInstr  regE (DirAddr 5),WriteInstr  reg0 (DirAddr 2),EndProg]

main = run[prog,prog,prog]