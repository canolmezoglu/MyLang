import Sprockell
prog :: [Instruction]
prog = [Load  (ImmValue 1) regA,Push  regA,Pop  regA,Store  regA (DirAddr 1),Load  (ImmValue 2) regA,Push  regA,Pop  regA,Store  regA (DirAddr 2),Load  (ImmValue 3) regA,Push  regA,Pop  regA,Store  regA (DirAddr 3),Load  (ImmValue 4) regA,Push  regA,Pop  regA,Store  regA (DirAddr 4),Load  (ImmValue 5) regA,Push  regA,Pop  regA,Store  regA (DirAddr 5),Load  (ImmValue 7) regA,Push  regA,Pop  regA,Store  regA (DirAddr 6),Load  (DirAddr 6) regA,Push  regA,Pop  regA,WriteInstr  regA numberIO,Load  (ImmValue 2) regA,Push  regA,Pop  regA,Store  regA (DirAddr 7),Load  (ImmValue 4) regB,Load  (ImmValue 7) regC,Load  (IndAddr regC) regC,Compute  Add regB regC regB,Load  (IndAddr regB) regA,Push  regA,Pop  regA,WriteInstr  regA numberIO,Load  (ImmValue 1) regA,Push  regA,Pop  regA,Store  regA (DirAddr 8),Load  (ImmValue 8) regB,Load  (IndAddr regB) regB,Load  (ImmValue 3) regC,Compute  Mul regB regC regB,Load  (ImmValue 1) regC,Compute  Add regB regC regB,Load  (ImmValue 7) regC,Load  (IndAddr regC) regC,Compute  Add regB regC regB,Load  (IndAddr regB) regA,Push  regA,Pop  regA,WriteInstr  regA numberIO,Load  (ImmValue 8) regB,Load  (IndAddr regB) regB,Load  (ImmValue 3) regC,Compute  Mul regB regC regB,Load  (ImmValue 1) regC,Compute  Add regB regC regB,Load  (ImmValue 2) regC,Compute  Add regB regC regB,Load  (IndAddr regB) regA,Push  regA,Pop  regA,WriteInstr  regA numberIO,Load  (ImmValue 7) regA,Push  regA,Pop  regA,Store  regA (DirAddr 9),Load  (ImmValue 8) regA,Push  regA,Pop  regA,Store  regA (DirAddr 10),Load  (ImmValue 9) regA,Push  regA,Pop  regA,Store  regA (DirAddr 11),Load  (ImmValue 10) regA,Push  regA,Pop  regA,Store  regA (DirAddr 12),Load  (DirAddr 12) regA,Push  regA,Pop  regA,WriteInstr  regA numberIO,Load  (ImmValue 0) regA,Push  regA,Pop  regA,Store  regA (DirAddr 13),Load  (DirAddr 7) regA,Push  regA,Load  (ImmValue 1) regA,Push  regA,Pop  regB,Pop  regA,Compute  Add regA regB regA,Push  regA,Pop  regA,Store  regA (DirAddr 7),Load  (ImmValue 5) regA,Push  regA,Pop  regA,Load  (ImmValue 13) regB,Load  (IndAddr regB) regB,Load  (ImmValue 4) regC,Compute  Mul regB regC regB,Load  (ImmValue 9) regC,Compute  Add regB regC regB,Load  (ImmValue 7) regC,Load  (IndAddr regC) regC,Compute  Add regB regC regB,Store  regA (IndAddr regB),Load  (DirAddr 5) regA,Push  regA,Load  (DirAddr 12) regA,Push  regA,Pop  regB,Pop  regA,Compute  Equal regA regB regA,Push  regA,Pop  regA,WriteInstr  regA numberIO,EndProg]

main = run[prog]